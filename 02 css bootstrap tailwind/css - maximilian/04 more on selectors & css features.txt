52. Using Multiple CSS Classes & Combined Selectors
53. Classes or IDs?
54. (Not) using !important
55. Selecting the Opposite with :not()
56. CSS & Browser Support

# -------------- Using Multiple CSS Classes & Combined Selectors ------------- #
âœ… 1. we can add any number of classes to a element.
âœ… 2. but we need a whitespace to separate them.
âœ… 3. while using multiple classes, if any styles clashes to one another then the order of code wins in this clash.
ðŸš©ðŸš©ðŸš©ðŸš©
    <div class="class1 class2 class3">
âš¡âš¡âš¡âš¡

âœ… 4. also we a unofficial selector which can target element that has the id or class we specify.
âœ… 5. this targets the element only if the class matches.
âœ… 6. this is not like combinators because we use whitespace in combinator.
ðŸš©ðŸš©ðŸš©ðŸš©
    <a href="#" class="active">
    a.active {
        ...css styles...
    }
âš¡âš¡âš¡âš¡

# ------------------------------ Classes or IDs? ----------------------------- #
âœ… 1. class selectors
    -- can be reused in multiple elements.
    -- used for styling purpose only.
    -- classes are strongle connected to css.
    -- most used.

âœ… 2. id selectors
    -- used only once per page.
    -- cannot be reused.

# -------------------------- (Not) using !important -------------------------- #
âœ… 1. !important - overrides specificity to all other selectors.
âœ… 2. dont use it unless you need it.
ðŸš©ðŸš©ðŸš©ðŸš©
    border: 1px solid red !important;
âš¡âš¡âš¡âš¡

# -------------------- Selecting the Opposite with :not() -------------------- #
âœ… 1. :not() comes under pseudo class.
âœ… 2. not() selects all element with dont match.
ðŸš©ðŸš©ðŸš©ðŸš©
    a:not(class_name){
        color: red;
    }
âš¡âš¡âš¡âš¡

âœ… 3. dont add any white space in the selectors.

# --------------------------- CSS & Browser Support -------------------------- #
âœ… 1. some features dont support in some browser versions and in some browser.
âœ… 2. 