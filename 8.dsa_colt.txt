# ----------------------- objectives in big o notation ----------------------- #
1. the need for something like big o notation.
2. describe what big o notation is.
3. simplify big o expressions.
4. define 'time complexity' and 'space complexity'.
5. evaluate the time complexity and space complexity of different algorithm using big o notation.
6. describe what a logarithm is.

# ------------------------------ big o notation ------------------------------ #
1. we can have different solutions when solving chalenges.
2. but there will be only one solution which is the best among every solution.
3. this best is determined by the big o notation.
4. so performance and memory plays the key role for finding the best code.
5. basically big o allow us to compare code of different programmers.
6. for example when we work in company and we are working on huge amount of data, at that time one algorithm implementation can save an hour everty time it runs compared to our code.
6. so most interviewer ask about big o notation.

# ------------------------------ timing our code ----------------------------- #
1. 


