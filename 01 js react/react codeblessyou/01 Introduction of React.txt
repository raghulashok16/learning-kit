# ------------------------------- WHAT IS REACT ------------------------------ #

📝📝📝📝NOTES
    - it is an open source javascript library used for building frontend applications.
    - with react we can create fast and better frontend application.
    - react was created by facebook in 2011.
    - currently it is the most popoular and most used javascript  frontend library.

# -------------------------- WHY REACT IS SO POPULAR ------------------------- #

📝📝📝📝NOTES
    - before react was created, when our web page loaded in a browser, our browser create tree like structure with our html code.
    - this tree structure is called document object model[DOM].
    - by using this dom in javascript, we can add various functionality for our application like hiding side bar on button click, handling form inputs, etc.
    - to achive these functionality with vanilla javascript we need to type large number of lines.
    - with this approach it is hard to manage and very messy while work on large applications.
    - so in react we dont need to worry about the vanilla javascript code.
    - beacuse in react we divide our application into small piece of code called components.
    - and react will take care of creating and updating dom.
    - components is used to write reusable and better organized code.
    - we buid all components individually and then combine them to build our page.
    - so by creating small components we can easily manage our code and our application also works fast.
    - with react we can create single page application which means our application loads only one time.
    - and all pages comes without reloading the entire page.
    - this will make our application almost 50% faster than normal applications.

# -------------------------------- VIRTUAL DOM ------------------------------- #

📝📝📝📝NOTES
    - react is so fast because of the virtual dom feature.
    - when we create a web page with react it will maintain a virtual representation of your webpage.
    - so this virtual representaion is called vitual dom.
    - whenever we want to update our webpage, we describe the changes to the virtual dom.
    - actualy we dont directly modify the real dom, reacts virtual dom efficienty compares the new virtual dom.
    - by this way react will know which compoents should be removed and which components should be added based on the virtual dom comparison.
    - in this approach, we will update only necessary things and we dont need to load the whole page.
    - Virtual dom makes updating the real dom smoother and more efficient, and it ehances the performance and increaces the user experiences.

# ---------------------------- SOFTWARES REQUIRED ---------------------------- #
✅ 1. node js[node pakacge manager is used to install react and some aditional features]
✅ 2. code editor[visual studio code]
✅ 3. es7/react snippets in vs code.
✅ 4. browser[chrome recommended]

# ---------------------------- CREATING REACT APP ---------------------------- #

📝📝📝📝NOTES
✅ 1. create react app [method 1]
✅ 2. vite [method 2]
✅ 3. creact react app is old way and it take much time compare to vite.

# ----------------------- CREATING REACT APP WITH VITE ----------------------- #

✅ 1. go to our project folder and run vite command in the terminal.
🚩🚩🚩🚩
npm create vite@latest
⚡⚡⚡⚡


✅ 2. tpye your project_name and hit enter.
✅ 3. select the framework[react] and hit enter.
✅ 4. select javascript[recomended for basic projects] or typescript[recomended for typecscript projects] base and hit enter.
✅ 5. now we need to change directory
🚩🚩🚩🚩
cd project_name
⚡⚡⚡⚡


✅ 6. we need to install some pakages like webpack, babel, etc.
🚩🚩🚩🚩
npm install
⚡⚡⚡⚡


✅ 7. open the project in vs code and open the terminal and launch with the below command.
🚩🚩🚩🚩
npm run dev
⚡⚡⚡⚡


✅ 8. it will show the link of our application[localhost link]

# ------------------------ INSIDE VITE REACT TEMPLATE ------------------------ #

📝📝📝📝NOTES
    - we have node folder where we have all the required pakages and libraries for our application.
    - without node modules we cant run our application and that is why we use # npm install command.
    - finally we dont touch this foler.
    - in src folder we spend all the time writing our code.
    - in asserts folder we put all our images, icons, fonts, etc.
    - app.jsx is the root component of our application.
    - app.jsx is the starting pont of the component chain and it is called root component.
    - .jsx is the extension the react component but it is similar to the js file.
    - unlike normal html code we use jsx[javascript XML].
    - with jsx we can write HTML and javascript code together and this is the heart of the react application.
    - we need to export default component so that we can use that in the other component.
    - app.css file is used to style our react application.
    - we import that css file at top of the each components.
    - main.jsx is the most important file of the react. 
    - this main file connect our components to the index.html file.
    - index.html is the main html file running in our react application.
    - every component inside our react applicaton is rendered inside the root id of the html file.
    - in .gitignore file we can define what files should not be uploaded in git.
    - this is because some important api keys will be there when we work on large projects.
    - in pakage.json file all the information will be available including which version we use in our project.
    - finally we have shorts for the commands we will be using for the terminals.


# ------------------------ MAIN THINGS IN THE INDEX.JS ----------------------- #
🚩🚩🚩🚩
    ReactDOM.createRoot(document.getElementById('root')).render();
⚡⚡⚡⚡

