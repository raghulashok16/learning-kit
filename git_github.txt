cmd wont work, use git bash

ls --> used to 'list' contents of the current working directory
start . --> to open the current working directory in file explorer
ls folder_name -->  used to 'list' contents of that folder
ls folder_name/folder_name -->  used to 'list' contents of that folder inside folder
pwd --> used to print the 'present working directory' [/c/Users/Administrator]
cd folder_name/ --> cd is an acronym for 'Change Directory'
cd .. --> move back from current working directory [one level]
touch purple.js --> creates 'purple.js' file in the current Directory [creating single file]
touch purple.js red.css --> creates 'purple.js and red.css' file in the current Directory [creating multiple files]
touch Pets/Horses/rocky.png --> creates 'rocky.png' file in the given path directory
mkdir Raghul --> creates a 'Raghul' folder in the current working directory
mkdir Raghul Raju --> creates a 'Raghul and Raju' folders in the current working directory
rm purple.js --> to delete the file from the current directory permanantly
rm purple.js red.js --> to delete multiple files from current directory permanantly
rm -rf Raghul --> to delete the folder from the current working directory [r-recusive,f-force]
<------------------------------->

git --version --> displays the git version installed in our machine
git config --global user.name "Raghul Ashok" --> to set user name of git in our machine
git config --global user.email raghulashok16@gmail.com --> to set user email of git in our machine
git config user.name --> to check the user name in our git
git config user.email --> to check the user email in our git
<------------------------------->

REPOSITORY = a git repo is a workspace which tracks and manages files within a folder, each repo has its own history
<------------------------------->

git status --> gives information on the current status of a git repository and its contents
git init --> to create a empty git repository
<------------------------------->

Note: before we can do anything git-related, we must initialize a repo first!, this is something you do once per project. initialize the repo in the top-level folder containing your project

git status will be available only after git init was initialized............
ls -a -->
<------------------------------->

Note: do not use [git init] inside a repo, this will corrupt that REPOSITORY, so always use [git status] to check wether repo is already initialized


