# ---------------------- what is node and why we use it? --------------------- #
1. node.js ia a javascript runtime built on google's open-source V8 javascript engine.
2. node.js is just like a container, like an environment in which the progrom written in javascript can be executed, but outside of any browser.
3. v8 engine developed by google comes into play. because that is exactly where javascript code will be parsed and run in node js.
4. we can use javascript on the server-side of web development.
5. we can build fast and highly scalable network applications(back-end).
6. we can use node for API with database behind it(preferably NoSQL).
7. we can use it for data streaming.
8. we can use it for real-time chat applications.
9. we can use it for server-side web applications.


# ---------------------------- when to use node js --------------------------- #
1. pros
    -- it is single-threaded, based on event driven, non-blocking I/O model which makes node js very ligthweight and efficient.
    -- it is perfect for building super-fast and scalable data-intensive apps.
    -- companies like netflix, uber, paypal, ebay have started using node in production.
    -- using same language for the entire stack development.
    -- NPM: huge library of open-source pakages available for everyone for free.
    -- very active developer community.


2. cons
    -- applications with heavy server-side processing(cpu-intensive)(image manipulations, video conversion, file compression, etc)

# -------------------- running javascript outside browser -------------------- #
1. this section is created to intract with node.
2. just open a new terminal in vs code.

    node

3. this command will enable node REPL which stand for read-eval-print-loop.
4. in REPL we can write javascript code just like in a normal terminal.
5. any javascript will work in here.
6. to exit the REPL use the below command.

    .exit

7. ctrl + k will clear the terminal(just for information purpose).
8. ctrl + d will also exit the REPL.
9. in the REPL, hit tab single/twice.
10. now you can see all the global variables that are available in node.
11. the global variables are listed in the terminal.
12. in node there is a underscore variable(underscore is your previous result).

    _+6

# ------------------------------- core modules ------------------------------- #
1. in our traditional way, we just link the javascript file to the html file and see the outputs in the console window in the browser.
2. but after installing node in our windows operating system, we just need a single line command to see the outputs in the terminal window.

    node file_name

3. this command will run and the outputs will be displayed in the vscode terminal if use terminal inside vscode.
4. basically node.js is build with bunch of modules.
5. these modeules are specific for doing certain works.
6. for example for reading files, we can use fs modeule.
7. so how can we use these modules in our code?

    const fs = require('fs');

8. by this code, we will get access to functions for reading data and writing data right to the file system.
9. by calling the fs module will then return an object in which there are lots of functions that we can use.
10. for learning other modules and its uses, we need node documentation.
11. go to node website and click docs, on the left side we can see the versions list in that select our version.
12. in the select version you will see all the required list of modules and its examples.

